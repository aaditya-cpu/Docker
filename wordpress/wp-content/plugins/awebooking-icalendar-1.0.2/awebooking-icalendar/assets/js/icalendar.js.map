{"version":3,"names":[],"mappings":"","sources":["icalendar.js"],"sourcesContent":["(function ($, plugin) {\n  'use strict';\n\n  class SyncICalProcess {\n    constructor() {\n      this.queue = [];\n      this.popup = swal.mixin({\n        html: '<code></code>',\n        width: '650px',\n        padding: '1rem',\n        customClass: 'icalendar-alertbox',\n        allowEscapeKey: false,\n        allowOutsideClick: false,\n      });\n    }\n\n    run(id) {\n      if (this.popup.isVisible()) {\n        this._createEventSource(id);\n        return;\n      }\n\n      this.popup({\n        title: 'Syncing',\n        onOpen: () => {\n          this._createEventSource(id);\n        }\n      });\n    }\n\n    _writeLineUpdate(message, level = 'debug') {\n      if (!this.popup.isVisible()) {\n        return;\n      }\n\n      level = level.toLowerCase();\n      const code = $(this.popup.getContent()).find('code');\n\n      if (code.length > 0) {\n        code.append(`<p class=\"line-${level}\">${message}</p>`);\n        code.scrollTop(code[0].scrollHeight);\n      }\n    }\n\n    _createEventSource(id) {\n      const sse = new EventSource(awebooking.route(`/ical/${id}/pull`));\n      const closeConnection = () => {\n        sse.close();\n\n        if (this.popup.isVisible()) {\n          this.popup.hideLoading();\n        }\n      }\n\n      if ( this.popup.isVisible() ) {\n        this.popup.showLoading();\n      }\n\n      sse.onerror = () => {\n        closeConnection();\n\n        if (this.popup.isVisible()) {\n          $(this.popup.getContent()).find('code').hide();\n          this.popup.showValidationError('Connection error');\n        }\n      };\n\n      sse.onmessage = function ( message ) {\n        const data = JSON.parse(message.data);\n\n        switch ( data.action ) {\n          case 'update':\n            break;\n\n          case 'complete':\n            closeConnection();\n            break;\n        }\n      };\n\n      // Logging the log.\n      sse.addEventListener('log', (message) => {\n        const data = JSON.parse(message.data);\n        this._writeLineUpdate(data.message, data.level);\n      });\n    };\n  }\n\n  $(function () {\n    // Create the processer.\n    const process = new SyncICalProcess()\n\n    $('.js-icalendar-sync').on('click', function(e) {\n      e.preventDefault();\n      process.run($(this).data('room'));\n    });\n\n    $('.js-icalendar-export').on('click', function (e) {\n      e.preventDefault();\n\n      swal({\n        title: 'Export iCalendar',\n        input: 'text',\n        inputValue: $(this).data('link'),\n      });\n    });\n\n  });\n\n})(jQuery, window.awebooking);\n"],"file":"icalendar.js"}